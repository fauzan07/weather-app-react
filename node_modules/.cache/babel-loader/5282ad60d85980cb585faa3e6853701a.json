{"ast":null,"code":"import _slicedToArray from\"/home/wws/weather-app-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./App.css';var api={key:\"d0c4ea76926c0692d5a5490265698c56\",base:\"https://api.openweathermap.org/data/2.5/\"};function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),weather=_useState4[0],setWeather=_useState4[1];var search=function search(event){if(event.key===\"Enter\"){fetch(\"\".concat(api.base,\"weather?q=\").concat(query,\"&units=metric&APPID=\").concat(api.key)).then(function(response){return response.json();}).then(function(result){setWeather(result);setQuery('');console.log(result);});}};var datebuilder=function datebuilder(d){var months=[\"january\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"Auguest\",\"September\",\"October\",\"November\",\"December\"];var days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var day=days[d.getDay()];var date=d.getDate();var month=months[d.getMonth()];var year=d.getFullYear();return\"\".concat(day,\" \").concat(date,\" \").concat(month,\" \").concat(year);};return/*#__PURE__*/React.createElement(\"div\",{className:typeof weather.main!=\"undefined\"?weather.main.temp>20?'App warm':'App':'App'},/*#__PURE__*/React.createElement(\"main\",null,/*#__PURE__*/React.createElement(\"h1\",{className:\"title\"},\"Weather Applicaton\"),/*#__PURE__*/React.createElement(\"div\",{className:\"search-box\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"search-bar\",placeholder:\"search...\",onChange:function onChange(event){return setQuery(event.target.value);},value:query,onKeyPress:search})),typeof weather.main!=\"undefined\"?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"location-box\"},/*#__PURE__*/React.createElement(\"div\",{className:\"location\"},weather.name,\", \",weather.sys.country),/*#__PURE__*/React.createElement(\"div\",{className:\"date\"},datebuilder(new Date()))),/*#__PURE__*/React.createElement(\"div\",{className:\"weather-box\"},/*#__PURE__*/React.createElement(\"div\",{className:\"temp\"},Math.round(weather.main.temp),\"\\xB0C\"),/*#__PURE__*/React.createElement(\"div\",{className:\"weather\"},weather.weather[0].main))):/*#__PURE__*/React.createElement(\"h2\",{className:\"getstarted\"},\"Get started by searching a City\")));}export default App;","map":{"version":3,"sources":["/home/wws/weather-app-react/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","event","fetch","then","response","json","result","console","log","datebuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","target","value","name","sys","country","Date","Math","round"],"mappings":"kJAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,WAAP,CAEA,GAAMC,CAAAA,GAAG,CAAG,CACVC,GAAG,CAAG,kCADI,CAEVC,IAAI,CAAE,0CAFI,CAAZ,CAKA,QAASC,CAAAA,GAAT,EAAe,eAEaJ,QAAQ,CAAC,EAAD,CAFrB,wCAENK,KAFM,eAECC,QAFD,8BAGiBN,QAAQ,CAAC,EAAD,CAHzB,yCAGNO,OAHM,eAGGC,UAHH,eAMb,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,CAAI,CACtB,GAAIA,KAAK,CAACR,GAAN,GAAc,OAAlB,CAA2B,CACzBS,KAAK,WAAIV,GAAG,CAACE,IAAR,sBAAyBE,KAAzB,gCAAqDJ,GAAG,CAACC,GAAzD,EAAL,CACGU,IADH,CACQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADhB,EAEGF,IAFH,CAEQ,SAAAG,MAAM,CAAI,CACdP,UAAU,CAACO,MAAD,CAAV,CACAT,QAAQ,CAAC,EAAD,CAAR,CACAU,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACD,CANH,EAOD,CACF,CAVD,CAYA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO,CAEzB,GAAIC,CAAAA,MAAM,CAAG,CAAC,SAAD,CAAY,UAAZ,CAAwB,OAAxB,CAAiC,OAAjC,CAA0C,KAA1C,CAAiD,MAAjD,CAAyD,MAAzD,CAAiE,SAAjE,CAA4E,WAA5E,CAAyF,SAAzF,CAAoG,UAApG,CAAgH,UAAhH,CAAb,CACA,GAAIC,CAAAA,IAAI,CAAG,CAAC,QAAD,CAAW,QAAX,CAAqB,SAArB,CAAgC,WAAhC,CAA6C,UAA7C,CAAyD,QAAzD,CAAmE,UAAnE,CAAX,CAGA,GAAIC,CAAAA,GAAG,CAAGD,IAAI,CAACF,CAAC,CAACI,MAAF,EAAD,CAAd,CACA,GAAIC,CAAAA,IAAI,CAAGL,CAAC,CAACM,OAAF,EAAX,CACA,GAAIC,CAAAA,KAAK,CAAGN,MAAM,CAACD,CAAC,CAACQ,QAAF,EAAD,CAAlB,CACA,GAAIC,CAAAA,IAAI,CAAGT,CAAC,CAACU,WAAF,EAAX,CAEA,gBAAUP,GAAV,aAAiBE,IAAjB,aAAyBE,KAAzB,aAAkCE,IAAlC,EAEH,CAbC,CAeA,mBACE,2BAAK,SAAS,CAAG,MAAOrB,CAAAA,OAAO,CAACuB,IAAf,EAAuB,WAAxB,CAAyCvB,OAAO,CAACuB,IAAR,CAAaC,IAAb,CAAoB,EAArB,CAA2B,UAA3B,CAAwC,KAAhF,CAAyF,KAAzG,eACC,6CACE,0BAAI,SAAS,CAAC,OAAd,uBADF,cAEE,2BAAK,SAAS,CAAC,YAAf,eACA,6BAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,YAA7B,CAA0C,WAAW,CAAC,WAAtD,CACO,QAAQ,CAAE,kBAAArB,KAAK,QAAIJ,CAAAA,QAAQ,CAACI,KAAK,CAACsB,MAAN,CAAaC,KAAd,CAAZ,EADtB,CAEO,KAAK,CAAE5B,KAFd,CAGO,UAAU,CAAEI,MAHnB,EADA,CAFF,CASI,MAAOF,CAAAA,OAAO,CAACuB,IAAf,EAAuB,WAAxB,cACA,4CAED,2BAAK,SAAS,CAAC,cAAf,eACE,2BAAK,SAAS,CAAC,UAAf,EAA2BvB,OAAO,CAAC2B,IAAnC,MAA2C3B,OAAO,CAAC4B,GAAR,CAAYC,OAAvD,CADF,cAEE,2BAAK,SAAS,CAAC,MAAf,EAAuBlB,WAAW,CAAC,GAAImB,CAAAA,IAAJ,EAAD,CAAlC,CAFF,CAFC,cAOD,2BAAK,SAAS,CAAC,aAAf,eACG,2BAAK,SAAS,CAAC,MAAf,EAAuBC,IAAI,CAACC,KAAL,CAAWhC,OAAO,CAACuB,IAAR,CAAaC,IAAxB,CAAvB,SADH,cAEG,2BAAK,SAAS,CAAC,SAAf,EAA0BxB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBuB,IAA7C,CAFH,CAPC,CADA,cAcK,0BAAI,SAAS,CAAC,YAAd,oCAvBR,CADD,CADF,CA6BD,CAED,cAAe1B,CAAAA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nconst api = {\n  key : \"d0c4ea76926c0692d5a5490265698c56\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n\n  const search = event => {\n    if (event.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(response => response.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n    }\n  }\n\n  const datebuilder = (d) => {\n\n    let months = [\"january\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Auguest\", \"September\", \"October\", \"November\", \"December\"]\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n\n}\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 20) ? 'App warm' : 'App') : 'App'}>\n     <main>\n       <h1 className=\"title\">Weather Applicaton</h1>\n       <div className=\"search-box\">\n       <input type=\"text\" className=\"search-bar\" placeholder=\"search...\" \n              onChange={event => setQuery(event.target.value)} \n              value={query} \n              onKeyPress={search}/>\n       </div>\n\n       {(typeof weather.main != \"undefined\") ? (\n        <div>\n\n       <div className=\"location-box\">\n         <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n         <div className=\"date\">{datebuilder(new Date())}</div>\n       </div>\n\n       <div className=\"weather-box\">\n          <div className=\"temp\">{Math.round(weather.main.temp)}Â°C</div>\n          <div className=\"weather\">{weather.weather[0].main}</div>\n       </div>\n\n       </div>\n        ) : (<h2 className=\"getstarted\">Get started by searching a City</h2>)}\n     </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}